buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven{url "https://oss.sonatype.org/content/repositories/snapshots/"}
        maven { url "https://plugins.gradle.org/m2/"}
        gradlePluginPortal()
        google()
    }
    dependencies {
        classpath 'org.wisepersist:gwt-gradle-plugin:1.1.16'
        classpath 'org.gretty:gretty:3.0.7'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.15'
        classpath "org.openrewrite:plugin:5.19.3"
    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "Awesome"
        gdxVersion = '1.10.0'
        roboVMVersion = '2.3.15'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

project(":desktop") {
    apply plugin: "java-library"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    }
}

project(":core") {
    apply plugin: "java-library"
    apply plugin: "jacoco"
    apply plugin: "checkstyle"
    apply plugin: "org.openrewrite.rewrite"

    dependencies {
        implementation 'com.github.matejtymes:javafixes:1.3.0'
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        api "com.badlogicgames.gdx:gdx-ai:$aiVersion"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion"
        implementation 'org.javatuples:javatuples:1.2'
        testImplementation('junit:junit:4.12'){
            exclude group: 'org.hamcrest'
        }
        testImplementation 'org.hamcrest:hamcrest-library:1.3'
        testImplementation "org.mockito:mockito-core:3.+"
        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        testImplementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    }

    test{
        testLogging {
            showStandardStreams = true
            events "passed", "skipped", "failed"
        }
        maxHeapSize = '1G'
        finalizedBy jacocoTestReport // report is always generated after tests run
    }

    def jacocoExclusions = [
        '**/model/*',
    ]

    jacocoTestReport {
        reports {
            html.enabled(true)
            xml.enabled(true)
            csv.enabled(true)
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
        dependsOn test // tests are required to run before generating the report
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: jacocoExclusions)
            }))
        }
    }

    checkstyle {
        toolVersion = '6.16.1'
        config = rootProject.resources.text.fromFile('core/etc/checkstyle/rules.xml')
    }

    rewrite {
        activeRecipe("org.openrewrite.java.cleanup.Cleanup")
    }

    def rewriteRunTask = tasks.named("rewriteRun")

    tasks.withType(Checkstyle) {
        dependsOn(rewriteRunTask)
    }
}

project(":ios") {
    apply plugin: "java-library"
    apply plugin: "robovm"


    dependencies {
        implementation project(":core")
        api "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        api "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        api "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-ios"
    }
}
